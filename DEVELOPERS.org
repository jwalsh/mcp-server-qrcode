#+TITLE: Developer Guide for MCP QR Code Server

* Prerequisites
** System Requirements
- Node.js >= 18.0.0
- ~qrencode~ utility installed on your system
  
*** MacOS Installation
#+begin_src bash
brew install qrencode
#+end_src

*** Linux (Debian/Ubuntu) Installation
#+begin_src bash
apt-get install qrencode
#+end_src

*** Linux (Red Hat/Fedora) Installation
#+begin_src bash
dnf install qrencode
#+end_src

* Installation
#+begin_src bash
# Clone the repository
git clone https://github.com/jwalsh/mcp-server-qrcode.git
cd mcp-server-qrcode

# Install dependencies
npm install

# Build the server
npm run build
#+end_src

* Development Setup

** Initial Project Setup
#+begin_src bash
# Initialize the project
make initialize

# Set up development environment
make setup
#+end_src

** Running the Project
#+begin_src bash
# Start in development mode
make dev

# Quick start the application
make quickstart
#+end_src

* Running the Server
#+begin_src bash
# Start the server
npm start

# Start with verbose logging
npm start -- -v
#+end_src

The server will start and listen for MCP requests over stdin/stdout.

* Using with MCP Clients

** Claude Desktop 

#+begin_src json
  {
    "mcpServers": {
      "qrcode": {
        "args": [
          "$HOME/projects/mcp-server-qrcode/build/cli.js"
        ],
        "command": "node"
      }
    }
  }

#+end_src

**  MCP Inspector

This server can be used with any MCP-compatible client. Here's an example of how to use it with the MCP Inspector:

#+begin_src bash
mcp-inspector -- node build/cli.js
#+end_src



* Testing
#+begin_src bash
# Run tests
make test

# Run tests with watch
make test-watch

# Run tests with coverage
make test-coverage
#+end_src

* Linting and Formatting
#+begin_src bash
# Lint code
make lint

# Automatically fix linting issues
make lint-fix

# Format code
make format
#+end_src

* Continuous Integration
#+begin_src bash
# Run all checks (lint, format, typecheck, test)
make ci
#+end_src

* Contributing
1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Run ~make ci~ to ensure all checks pass
5. Submit a pull request

* Troubleshooting
- Ensure you're using Node.js 18.0.0 or higher
- Install ~qrencode~ utility for your system
- Run ~make initialize~ if you encounter dependency issues
- Check ~make setup~ for environment verification
