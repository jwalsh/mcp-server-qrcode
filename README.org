#+TITLE: MCP QR Code Server
* Overview
Generate QR codes seamlessly across multiple interfaces using the Model Context Protocol (MCP).

* Quick Examples

Ask to generate a QR code for any content:

#+begin_example
Please generate a QR code for https://example.com
#+end_example

#+begin_example
Generate a QR code for the Wi-Fi network "GuestWiFi" with password "Welcome123"
#+end_example

#+begin_example
Create a QR code for my contact information:
Name: John Doe
Email: john@example.com
Phone: 555-123-4567
#+end_example

* Usage

** Claude Desktop
To use this QR code generator with Claude Desktop:

#+begin_src json :tangle generated/claude_desktop_config.json :mkdirp yes
  {
    "mcpServers": {
      "qrcode": {
        "args": [
          "-y",
          "@jwalsh/mcp-server-qrcode"
        ],
        "command": "npx"
      }
    }
  }
#+end_src

1. Configure Claude Desktop to use the MCP server
2. Use the "Generate QR Code" tool to create QR codes for:
   - URLs
   - Plain text
   - Contact information
   - Wi-Fi credentials

** MCP Inspector
For development and testing with MCP Inspector:

#+begin_src bash
npx -y @modelcontextprotocol/inspector npx -y @jwalsh/mcp-server-qrcode

#+end_src

** NPM

#+begin_src bash :tangle generated/mcp-server-qrcode-install.sh :mkdirp yes
npm view @jwalsh/mcp-server-qrcode
npm install -g @jwalsh/mcp-server-qrcode@latest
echo '{"method":"tools/list","jsonrpc":"2.0","id":1,"params":{}}' | mcp-server-qrcode | jq -r '.result.tools[]|.name'

#+end_src

** Development & Testing
For local development and testing, you can use additional CLI features:

#+begin_src bash
# Clone and set up the repository
git clone https://github.com/jwalsh/mcp-server-qrcode.git
cd mcp-server-qrcode
npm install
npm run build
echo '{"jsonrpc":"2.0","method":"tools/call","params":{"name":"generate-qrcode","arguments":{"content":"test","format":"image"}},"id":2}' | node build/main.js | jq -r '.result.content[1].data' | base64 -d | imgcat

#+end_src

** Emacs (mcp.el)

#+begin_src elisp :tangle generated/mcp-server-qrcode.el :mkdirp yes
;; In Emacs with mcp.el loaded
(mcp-connect-server "qrcode" 
                    "npx" 
                    '("-y" "@jwalsh/mcp-server-qrcode")
                    :initial-callback
                    (lambda (connection)
                      (message "Connected to %s" (jsonrpc-name connection)))
                    :tools-callback
                    (lambda (connection tools)
                      (message "Available tools: %s" tools)))

#+end_src

* Configuration Options
- ~--size~: Set the size of the QR code in pixels (default: 200)
- ~--error-correction~: Set error correction level
  - ~L~: Low (7% of codewords can be restored)
  - ~M~: Medium (15% of codewords can be restored)
  - ~Q~: Quartile (25% of codewords can be restored)
  - ~H~: High (30% of codewords can be restored)

* Developer Documentation
For detailed setup, installation, and contribution guidelines, please refer to [[file:DEVELOPERS.org][DEVELOPERS.org]].

* License
MIT License
